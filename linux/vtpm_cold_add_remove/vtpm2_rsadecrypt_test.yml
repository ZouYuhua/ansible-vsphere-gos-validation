# Copyright 2025 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Check TPM allow performing RSA private key decryption

# Create RSA key pair
- name: "Create a Primary Key under the Owner hierarchy of the TPM and save its context to the file primary.ctx"
  ansible.builtin.shell: tpm2_createprimary -C o -c primary.ctx
  delegate_to: "{{ vm_guest_ip }}"

- name: "Create a RSA key pair"
  ansible.builtin.shell: tpm2_create -C primary.ctx -G rsa -u rsa.pub -r rsa.priv
  delegate_to: "{{ vm_guest_ip }}"

- name: "Load RSA key pair to TPM"
  ansible.builtin.shell: tpm2_load -C primary.ctx -u rsa.pub -r rsa.priv -c rsa.ctx
  delegate_to: "{{ vm_guest_ip }}"

- name: "Public key export (for encryption)"
  ansible.builtin.shell: tpm2_readpublic -c rsa.ctx -o rsa_pub.pem -f pem
  delegate_to: "{{ vm_guest_ip }}"

- name: "Prepare test data"
  ansible.builtin.shell: echo "Hello_vTPM" > secret.txt
  delegate_to: "{{ vm_guest_ip }}"

- name: "Encrypt data with OpenSSL"
  ansible.builtin.shell: openssl pkeyutl -encrypt -inkey rsa_pub.pem -pubin -in secret.txt -out secret.enc
  delegate_to: "{{ vm_guest_ip }}"

- name: "Decrypt data with TPM"
  ansible.builtin.shell: tpm2_rsadecrypt -c rsa.ctx -o secret.dec secret.enc
  delegate_to: "{{ vm_guest_ip }}"

- name: "Read the decrypted data"
  ansible.builtin.shell: cat secret.dec
  delegate_to: "{{ vm_guest_ip }}"
  register: decrypted_data_result

- name: "Check the decrypted data"
  ansible.builtin.assert:
    that:
      - decrypted_data_result.stdout is defined
      - decrypted_data_result.stdout
      - decrypted_data_result.stdout == "Hello_vTPM"
    fail_msg: "The decrypted data does not match the original data."
    success_msg: "The decrypted data matches the original data."
